{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const post_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, post_r1), \"\\n\");\n  }\n}\nclass AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.ROOT_URL_ = 'https://jsonplaceholder.typicode.com';\n    // 1\n    // posts: any\n    // 2\n    // posts: Observable<Post[]> = new Observable<Post[]>;\n    // 3, 4\n    this.posts = new Observable();\n    this.newPost = new Observable();\n  }\n  getPosts() {\n    // 1\n    // this.posts = this.http.get(this.ROOT_URL_ + '/posts');\n    // 2\n    // this.posts = this.http.get(this.ROOT_URL_+ '/posts')\n    // 4 Http Params\n    // let params = new HttpParams().set('userId', '1');\n    // this.posts = this.http.get(this.ROOT_URL_ + '/posts', { params })\n    // 5 Http Headers\n    let headers = new HttpHeaders().set('Authorization', 'auth-token');\n    this.posts = this.http.get(this.ROOT_URL_ + '/posts', {\n      headers\n    });\n  }\n  createPost() {\n    const data = {\n      id: undefined,\n      userId: 23,\n      title: 'My New Post',\n      body: 'Hello World!'\n    };\n    this.newPost = this.http.post(this.ROOT_URL_ + '/posts', data).map(post => post.title);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 12,\n  vars: 8,\n  consts: [[3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Angular HTTP Basic\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        return ctx.getPosts();\n      });\n      i0.ɵɵtext(3, \"Get Posts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AppComponent_div_4_Template, 3, 3, \"div\", 1);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementStart(6, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_6_listener() {\n        return ctx.createPost();\n      });\n      i0.ɵɵtext(7, \"Create Post\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"hr\");\n      i0.ɵɵtext(9);\n      i0.ɵɵpipe(10, \"json\");\n      i0.ɵɵpipe(11, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 2, ctx.posts));\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\"\\n\", i0.ɵɵpipeBind1(10, 4, i0.ɵɵpipeBind1(11, 6, ctx.newPost)), \"\\n\");\n    }\n  },\n  dependencies: [i2.NgForOf, i2.AsyncPipe, i2.JsonPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["HttpHeaders","Observable","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","post_r1","AppComponent","constructor","http","ROOT_URL_","posts","newPost","getPosts","headers","set","get","createPost","data","id","undefined","userId","title","body","post","map","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵlistener","AppComponent_Template_button_click_2_listener","ɵɵtemplate","AppComponent_div_4_Template","AppComponent_Template_button_click_6_listener","ɵɵelement","ɵɵproperty"],"sources":["/home/christoph/code/learn/angular/angular-tutorial/httpclient/src/app/app.component.ts","/home/christoph/code/learn/angular/angular-tutorial/httpclient/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Post } from './post';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/map';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  readonly ROOT_URL_= 'https://jsonplaceholder.typicode.com';\n\n  // 1\n  // posts: any\n  // 2\n  // posts: Observable<Post[]> = new Observable<Post[]>;\n  // 3, 4\n  posts: Observable<any> = new Observable;\n  newPost: Observable<any> = new Observable;\n\n  constructor(private http: HttpClient) {}\n\n  getPosts() {\n   \n    // 1\n    // this.posts = this.http.get(this.ROOT_URL_ + '/posts');\n\n    // 2\n    // this.posts = this.http.get(this.ROOT_URL_+ '/posts')\n    \n    // 4 Http Params\n    // let params = new HttpParams().set('userId', '1');\n    // this.posts = this.http.get(this.ROOT_URL_ + '/posts', { params })\n    \n    // 5 Http Headers\n    let headers = new HttpHeaders().set('Authorization', 'auth-token');\n    this.posts = this.http.get(this.ROOT_URL_ + '/posts', { headers });\n\n  }\n  createPost() {\n    const data: Post = {\n      id: undefined,\n      userId: 23,\n      title: 'My New Post',\n      body: 'Hello World!'\n    }\n\n    this.newPost = this.http.post(this.ROOT_URL_ + '/posts', data)\n      .map(post => post.title)\n  }\n\n}\n","<h1>Angular HTTP Basic</h1>\n\n<button (click)=\"getPosts()\">Get Posts</button>\n\n<div *ngFor=\"let post of posts | async\">\n  {{ post | json }}\n</div>\n\n<button (click)=\"createPost()\">Create Post</button>\n<hr>\n{{ newPost | async | json }}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAoB,sBAAsB;AAE1E,SAASC,UAAU,QAAQ,MAAM;AACjC,OAAO,uBAAuB;;;;;;ICA9BC,EAAA,CAAAC,cAAA,UAAwC;IACtCD,EAAA,CAAAE,MAAA,GACF;;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IADJH,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAK,kBAAA,MAAAL,EAAA,CAAAM,WAAA,OAAAC,OAAA,QACF;;;ADAA,MAKaC,YAAY;EAYvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVf,KAAAC,SAAS,GAAE,sCAAsC;IAE1D;IACA;IACA;IACA;IACA;IACA,KAAAC,KAAK,GAAoB,IAAIb,UAAU,CAAV,CAAU;IACvC,KAAAc,OAAO,GAAoB,IAAId,UAAU,CAAV,CAAU;EAEF;EAEvCe,QAAQA,CAAA;IAEN;IACA;IAEA;IACA;IAEA;IACA;IACA;IAEA;IACA,IAAIC,OAAO,GAAG,IAAIjB,WAAW,EAAE,CAACkB,GAAG,CAAC,eAAe,EAAE,YAAY,CAAC;IAClE,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACF,IAAI,CAACO,GAAG,CAAC,IAAI,CAACN,SAAS,GAAG,QAAQ,EAAE;MAAEI;IAAO,CAAE,CAAC;EAEpE;EACAG,UAAUA,CAAA;IACR,MAAMC,IAAI,GAAS;MACjBC,EAAE,EAAEC,SAAS;MACbC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE;KACP;IAED,IAAI,CAACX,OAAO,GAAG,IAAI,CAACH,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,SAAS,GAAG,QAAQ,EAAEQ,IAAI,CAAC,CAC3DO,GAAG,CAACD,IAAI,IAAIA,IAAI,CAACF,KAAK,CAAC;EAC5B;;AAzCWf,YAAY,C;mBAAZA,YAAY,EAAAR,EAAA,CAAA2B,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZrB,YAAY,C;QAAZA,YAAY;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCXzBpC,EAAA,CAAAC,cAAA,SAAI;MAAAD,EAAA,CAAAE,MAAA,yBAAkB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAE3BH,EAAA,CAAAC,cAAA,gBAA6B;MAArBD,EAAA,CAAAsC,UAAA,mBAAAC,8CAAA;QAAA,OAASF,GAAA,CAAAvB,QAAA,EAAU;MAAA,EAAC;MAACd,EAAA,CAAAE,MAAA,gBAAS;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAE/CH,EAAA,CAAAwC,UAAA,IAAAC,2BAAA,iBAEM;;MAENzC,EAAA,CAAAC,cAAA,gBAA+B;MAAvBD,EAAA,CAAAsC,UAAA,mBAAAI,8CAAA;QAAA,OAASL,GAAA,CAAAnB,UAAA,EAAY;MAAA,EAAC;MAAClB,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;MACnDH,EAAA,CAAA2C,SAAA,SAAI;MACJ3C,EAAA,CAAAE,MAAA,GACA;;;;;MAPsBF,EAAA,CAAAI,SAAA,GAAgB;MAAhBJ,EAAA,CAAA4C,UAAA,YAAA5C,EAAA,CAAAM,WAAA,OAAA+B,GAAA,CAAAzB,KAAA,EAAgB;MAMtCZ,EAAA,CAAAI,SAAA,GACA;MADAJ,EAAA,CAAAK,kBAAA,OAAAL,EAAA,CAAAM,WAAA,QAAAN,EAAA,CAAAM,WAAA,QAAA+B,GAAA,CAAAxB,OAAA,SACA;;;;;;SDAaL,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}