{"mappings":"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","sources":["node_modules/@kurkle/color/dist/color.esm.js","node_modules/chart.js/src/helpers/helpers.core.ts","node_modules/chart.js/src/helpers/helpers.math.ts","node_modules/chart.js/src/helpers/helpers.collection.ts","node_modules/chart.js/src/helpers/helpers.extras.ts","node_modules/chart.js/src/helpers/helpers.easing.ts","node_modules/chart.js/src/helpers/helpers.color.ts","node_modules/chart.js/src/core/core.animations.defaults.js","node_modules/chart.js/src/helpers/helpers.intl.ts","node_modules/chart.js/src/core/core.ticks.js","node_modules/chart.js/src/core/core.defaults.js","node_modules/chart.js/src/core/core.layouts.defaults.js","node_modules/chart.js/src/core/core.scale.defaults.js","node_modules/chart.js/src/helpers/helpers.canvas.ts","node_modules/chart.js/src/helpers/helpers.options.ts","node_modules/chart.js/src/helpers/helpers.config.ts","node_modules/chart.js/src/helpers/helpers.curve.ts","node_modules/chart.js/src/helpers/helpers.dom.ts","node_modules/chart.js/src/helpers/helpers.interpolation.ts","node_modules/chart.js/src/helpers/helpers.rtl.ts","node_modules/chart.js/src/helpers/helpers.segment.js","node_modules/chart.js/src/core/core.animator.js","node_modules/chart.js/src/core/core.animation.js","node_modules/chart.js/src/core/core.animations.js","node_modules/chart.js/src/core/core.datasetController.js","node_modules/chart.js/src/controllers/controller.bar.js","node_modules/chart.js/src/controllers/controller.doughnut.js","node_modules/chart.js/src/controllers/controller.polarArea.js","node_modules/chart.js/src/controllers/controller.bubble.js","node_modules/chart.js/src/controllers/controller.line.js","node_modules/chart.js/src/controllers/controller.pie.js","node_modules/chart.js/src/controllers/controller.radar.js","node_modules/chart.js/src/controllers/controller.scatter.js","node_modules/chart.js/src/core/core.adapters.ts","node_modules/chart.js/src/core/core.interaction.js","node_modules/chart.js/src/core/core.layouts.js","node_modules/chart.js/src/platform/platform.base.js","node_modules/chart.js/src/platform/platform.basic.js","node_modules/chart.js/src/platform/platform.dom.js","node_modules/chart.js/src/core/core.element.ts","node_modules/chart.js/src/core/core.scale.autoskip.js","node_modules/chart.js/src/core/core.scale.js","node_modules/chart.js/src/core/core.typedRegistry.js","node_modules/chart.js/src/core/core.registry.js","node_modules/chart.js/src/core/core.plugins.js","node_modules/chart.js/src/core/core.config.js","node_modules/chart.js/src/core/core.controller.js","node_modules/chart.js/src/platform/index.js","node_modules/chart.js/src/elements/element.arc.ts","node_modules/chart.js/src/elements/element.line.js","node_modules/chart.js/src/elements/element.point.ts","node_modules/chart.js/src/elements/element.bar.js","node_modules/chart.js/src/plugins/plugin.colors.ts","node_modules/chart.js/src/plugins/plugin.decimation.js","node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","node_modules/chart.js/src/plugins/plugin.filler/index.js","node_modules/chart.js/src/plugins/plugin.legend.js","node_modules/chart.js/src/plugins/plugin.title.js","node_modules/chart.js/src/plugins/plugin.subtitle.js","node_modules/chart.js/src/plugins/plugin.tooltip.js","node_modules/chart.js/src/scales/scale.category.js","node_modules/chart.js/src/scales/scale.linearbase.js","node_modules/chart.js/src/scales/scale.linear.js","node_modules/chart.js/src/scales/scale.logarithmic.js","node_modules/chart.js/src/scales/scale.radialLinear.js","node_modules/chart.js/src/scales/scale.time.js","node_modules/chart.js/src/scales/scale.timeseries.js","node_modules/chart.js/auto/auto.js","node_modules/chart.js/src/index.ts","src/acquisitions1.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import Chart from 'chart.js/auto'\n\n(async function() {\n  const data = [\n    { year: 2010, count: 10 },\n    { year: 2011, count: 20 },\n    { year: 2012, count: 15 },\n    { year: 2013, count: 25 },\n    { year: 2014, count: 22 },\n    { year: 2015, count: 30 },\n    { year: 2016, count: 28 },\n  ];\n\n  new Chart(\n    document.getElementById('acquisitions'),\n    {\n      type: 'bar',\n      data: {\n        labels: data.map(row => row.year),\n        datasets: [\n          {\n            label: 'Acquisitions by year',\n            data: data.map(row => row.count)\n          }\n        ]\n      }\n    }\n  );\n})();\n"],"names":["$87e6acd7396d97dc$export$2077e0241d6afd3c","v","$87e6acd7396d97dc$export$837ba5c449269406","l","h","Math","max","min","$87e6acd7396d97dc$export$bcc6e673dfa14d36","$87e6acd7396d97dc$export$ed9bd8dcaeba14f6","$87e6acd7396d97dc$export$dbf961a8d278dbef","$87e6acd7396d97dc$export$aa35ef1f24408ab9","$87e6acd7396d97dc$var$map$1","A","B","C","D","E","F","a","b","c","d","e","f","$87e6acd7396d97dc$var$hex","$87e6acd7396d97dc$var$h1","$87e6acd7396d97dc$var$h2","$87e6acd7396d97dc$var$eq","$87e6acd7396d97dc$export$1b06654353ef9f67","r","g","$87e6acd7396d97dc$var$isShort","$87e6acd7396d97dc$var$alpha","undefined","$87e6acd7396d97dc$var$HUE_RE","$87e6acd7396d97dc$var$hsl2rgbn","s","n","k","$87e6acd7396d97dc$var$hsv2rgbn","$87e6acd7396d97dc$var$hwb2rgbn","w","rgb","i","$87e6acd7396d97dc$export$b5ba70b240f8f7f","$87e6acd7396d97dc$var$hueValue","$87e6acd7396d97dc$var$calln","Array","isArray","map","$87e6acd7396d97dc$export$4c15bd42559b811d","$87e6acd7396d97dc$var$hue","$87e6acd7396d97dc$export$5e91288c399be4f9","str","m","exec","p1","p2","$87e6acd7396d97dc$export$e2710022c70fc9ee","$87e6acd7396d97dc$export$b785a357c84e4a04","$87e6acd7396d97dc$var$map","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$87e6acd7396d97dc$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$87e6acd7396d97dc$var$names","$87e6acd7396d97dc$export$b2f06b640faad956","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","$87e6acd7396d97dc$var$unpack","transparent","toLowerCase","$87e6acd7396d97dc$var$RGB_RE","$87e6acd7396d97dc$var$to","pow","$87e6acd7396d97dc$var$from","$87e6acd7396d97dc$var$modHSL","ratio","tmp","$87e6acd7396d97dc$var$clone","proto","assign","$87e6acd7396d97dc$var$fromObject","input","$87e6acd7396d97dc$var$functionParse","charAt","$87e6acd7396d97dc$export$91aedb20f296e541","$87e6acd7396d97dc$export$892596cec99bc70e","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hexString","hslString","$87e6acd7396d97dc$export$a197af1c58e6260c","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","$87e6acd7396d97dc$var$interpolate","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$87e6acd7396d97dc$export$bb628a54ab399bc9","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","floor","fraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","from","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","Color","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","$8d27ca75da600b9c$export$91477dc880baac21","overrides","descriptors","getScope","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","$8d27ca75da600b9c$export$4368d992c4eafac0","_scriptable","startsWith","_indexable","_fallback","defaults","duration","easing","loop","to","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","bottom","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","_computeSegments","segmentOptions","_loop","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","$216d2bdc6f281bf6$export$a424a0aa8f687495","interpolators","boolean","factor","c0","helpersColor","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","pointPosition","getPointPositionForValue","registry","getElement","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","$216d2bdc6f281bf6$export$f32766ea09ec8bc4","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","$216d2bdc6f281bf6$export$a13296960cae0384","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","$216d2bdc6f281bf6$export$1ecca0613f5e56d2","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","$216d2bdc6f281bf6$export$4bb7493d241fd8a5","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","_interpolate","_getInterpolationMethod","interpolated","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","addRectPath","mouseX","mouseY","inXRange","inYRange","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","$216d2bdc6f281bf6$export$c537fa0d021d010b","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","$216d2bdc6f281bf6$export$be17f937e9aa7533","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","$216d2bdc6f281bf6$export$d19ba4d812bed757","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","$216d2bdc6f281bf6$export$ed247974535929c7","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","$216d2bdc6f281bf6$export$f99233281efd08a0","titleBlock","createTitle","WeakMap","$216d2bdc6f281bf6$export$d5c56664638992a4","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","$216d2bdc6f281bf6$export$28c660c63b792dea","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","$216d2bdc6f281bf6$export$acaa6426d77a227e","_addedLabels","added","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","$e24bb3f4f01060dd$export$2e2bcd8739ae039"],"version":3,"file":"index.1092e689.js.map"}